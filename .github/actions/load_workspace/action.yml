---
name: Load and initialise workspace
description: Loads a workspace dumped by the dump_workspace action
inputs:
  artifact_name:
    description: Passed on as `name` to actions/download-artifact
    required: true
runs:
  using: composite
  steps:

  - shell: bash -elo pipefail {0}
    id: prepare
    run: |
      : Prepare temporary download location
      TMP_DIR=$(mktemp -d "load_workspace.XXXXXXXXXXXX")
      echo "TMP_DIR=${TMP_DIR}" >> "${GITHUB_OUTPUT}"

  - name: Download dumped workspace
    uses: actions/download-artifact@v4.1.9
    with:
      name: ${{inputs.artifact_name}}
      path: ${{steps.prepare.outputs.TMP_DIR}}/

  - shell: bash -elo pipefail {0}
    id: prep_workspace
    run: |
      : Prepare loading workspace
      for key in REPO_NAME TAR_NAME ; do
        filename="${{steps.prepare.outputs.TMP_DIR}}/dump_workspace.$key"  # see dump action
        if ! [[ -e "${filename}" ]] ; then
          echo "::error::Missing ${filename} which has to be present in artifacts from actions/dump_workspace!"
          exit 1
        fi
        echo -n "reading from ${filename}: "
        value=$(cat "${filename}")
        echo "${value}"
        if [[ "BASH_TRICK_TO_ENSURE_VALUE_IS_NOT_EMPTY${value}" == "BASH_TRICK_TO_ENSURE_VALUE_IS_NOT_EMPTY" ]] ; then
          echo "::error::Missing content in ${filename} which has to present in artifacts actions/dump_workspace!"
          exit 1
        fi
        # Make available in this step ...
        export "${key}=${value}"
        # ... and in follow-up steps.
        echo "${key}=${value}" >> "${GITHUB_OUTPUT}"
        rm "${filename}"
      done

      if ! [[ -e "${{steps.prepare.outputs.TMP_DIR}}/${TAR_NAME}" ]] ; then
        echo "::error::Missing ${TAR_NAME} which has to be present in artifacts from actions/dump_workspace!"
        exit 1
      fi

      THIS_REPO_NAME="${GITHUB_REPOSITORY#*/}"
      if [[ "${REPO_NAME}" != "${THIS_REPO_NAME}" ]] ; then
        echo "::error::Not unpacking a workspace dumped from ${REPO_NAME} repository into this repository (${THIS_REPO_NAME})!"
        exit 1
      fi

  - shell: bash -elo pipefail {0}
    run: |-
      : Loading workspace
      REPO_NAME="${{steps.prep_workspace.outputs.REPO_NAME}}"
      TAR_NAME="${{steps.prep_workspace.outputs.TAR_NAME}}"
      echo "Ensuring workspace folder coincides with repo name"
      cd "${{github.workspace}}"
      mv "${{steps.prepare.outputs.TMP_DIR}}/${TAR_NAME}" ../
      cd ..
      [[ -e "${REPO_NAME}" ]] || exit 1
      [[ -e "${TAR_NAME}" ]] || exit 1
      echo "Clearing workspace"
      rm -rf "${REPO_NAME:?}"/*
      echo "Loading workspace"
      tar -xzf "${TAR_NAME}"
